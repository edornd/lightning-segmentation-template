# @package _global_

# specify here default training configuration
defaults:
    - trainer: multi-gpu
    - model: segmentation
    - datamodule: vaihingen_full
    - augmentations: default
    - callbacks: default        # set this to null if you don't want to use callbacks
    - logger: many              # set logger here or use command line (e.g. `python run.py logger=wandb`)
    - plugin: many

    - override: null
    - hparams_search: null

    # enable color logging
    - override hydra/hydra_logging: colorlog
    - override hydra/job_logging: colorlog

# global seed, none by default
seed: null
# run mode
run_mode: train

# path to original working directory
# hydra hijacks working directory by changing it to the current log directory,
# so it's useful to have this path as a special variable
# learn more here: https://hydra.cc/docs/next/tutorials/basic/running_your_app/working_directory
work_dir: ${hydra:runtime.cwd}
# path to folder with data
data_dir: ${oc.env:DATA_DIR}
# name of the project
project_name: satmib

# use `python run.py debug=true` for easy debugging!
# this will run 1 train, val and test loop with only 1 batch
# equivalent to running `python run.py trainer.fast_dev_run=true`
# (this is placed here just for easier access from command line)
debug: False
# pretty print config at the start of the run using Rich library
print_config: True
# disable python warnings if they annoy you
disable_warnings: False


hydra:
    # output paths for hydra logs
    run:
        dir: _outputs/runs/${now:%Y-%m-%d_%H-%M-%S}/
    sweep:
        dir: _outputs/multiruns/${now:%Y-%m-%d_%H-%M-%S}
        subdir: ${hydra.job.override_dirname}
